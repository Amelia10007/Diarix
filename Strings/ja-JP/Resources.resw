<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddedHyperLink" xml:space="preserve">
    <value>リンクを追加しました．</value>
  </data>
  <data name="AddedImage" xml:space="preserve">
    <value>画像を追加しました:</value>
    <comment>MainPageのメッセージ</comment>
  </data>
  <data name="AddedMedia" xml:space="preserve">
    <value>メディアファイルを追加しました．</value>
  </data>
  <data name="AddHyperLinkButton.Label" xml:space="preserve">
    <value>リンク</value>
  </data>
  <data name="AddHyperLinkButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>ハイパーリンクを日記の末尾に追加します(Ctrl+L)．</value>
  </data>
  <data name="AddImageButton.Label" xml:space="preserve">
    <value>画像</value>
  </data>
  <data name="AddImageButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>日記の末尾に画像を追加します(Ctrl+I)．</value>
  </data>
  <data name="AddImageButton2.Label" xml:space="preserve">
    <value>編集と追加</value>
  </data>
  <data name="AddImageButton2.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>画像をリサイズして，日記の末尾に追加します(Ctrl+J)．</value>
  </data>
  <data name="AddingMedia" xml:space="preserve">
    <value>メディアファイルを追加中...</value>
  </data>
  <data name="AddMediaButton.Label" xml:space="preserve">
    <value>メディア</value>
  </data>
  <data name="AddMediaButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>音楽や動画を日記の末尾に追加します(Ctrl+M)．</value>
  </data>
  <data name="AddParagraphButton.Label" xml:space="preserve">
    <value>段落</value>
  </data>
  <data name="AddParagraphButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>日記の末尾にテキスト入力用の段落を追加します(Ctrl+T)．</value>
  </data>
  <data name="AddPivot.Text" xml:space="preserve">
    <value>追加</value>
    <comment>MainPageの第2タブ</comment>
  </data>
  <data name="CancelButton.Content" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="ChangedPassword" xml:space="preserve">
    <value>パスワードの変更が完了しました．</value>
  </data>
  <data name="ChangedSetting" xml:space="preserve">
    <value>設定を変更しました．</value>
  </data>
  <data name="ChangingPassword" xml:space="preserve">
    <value>新しいパスワードを適用中...</value>
  </data>
  <data name="ContentDialogCancelButton" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="ContentDialogOkButton" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="DeletedFlipView" xml:space="preserve">
    <value>フリップビューを削除しました．</value>
  </data>
  <data name="DeletedHyperLink" xml:space="preserve">
    <value>リンクを削除しました．</value>
  </data>
  <data name="DeletedImage" xml:space="preserve">
    <value>画像を削除しました．</value>
  </data>
  <data name="DeletedMedia" xml:space="preserve">
    <value>メディアファイルを削除しました．</value>
  </data>
  <data name="DeletedParagraph" xml:space="preserve">
    <value>段落を削除しました．</value>
  </data>
  <data name="DragOver" xml:space="preserve">
    <value>日記の末尾にコンテンツを追加</value>
  </data>
  <data name="EditorPivotHyperLink" xml:space="preserve">
    <value>リンク</value>
  </data>
  <data name="EditorPivotImage" xml:space="preserve">
    <value>画像</value>
  </data>
  <data name="EditorPivotMedia" xml:space="preserve">
    <value>音楽・動画</value>
  </data>
  <data name="EditorPivotParagraph" xml:space="preserve">
    <value>フォント</value>
  </data>
  <data name="FilePivot.Text" xml:space="preserve">
    <value>ファイル</value>
    <comment>MainPageの第一タブ</comment>
  </data>
  <data name="FirstExplanation" xml:space="preserve">
    <value>まずはパスワードを設定しましょう．
このパスワードは後から変更することもできます．</value>
  </data>
  <data name="CheckToSaveDiary" xml:space="preserve">
    <value>日記の内容が変更されています．上書き保存しますか?</value>
  </data>
  <data name="LatestDiary" xml:space="preserve">
    <value>これが最新の日記です．</value>
  </data>
  <data name="NextDiaryButton.Label" xml:space="preserve">
    <value>次の日記へ</value>
  </data>
  <data name="NextDiaryButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>ひとつ後の日記へ移動します(Ctrl+N)．</value>
  </data>
  <data name="OkButton.Content" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OldestDiary" xml:space="preserve">
    <value>これが最古の日記です．</value>
  </data>
  <data name="OpenedDiary" xml:space="preserve">
    <value>日記を開きました:</value>
  </data>
  <data name="OpeningDiary" xml:space="preserve">
    <value>日記を開いています...</value>
  </data>
  <data name="PasswordPrompt.Text" xml:space="preserve">
    <value>パスワードを入力してください．</value>
  </data>
  <data name="PasswordSkipCheckBox.Content" xml:space="preserve">
    <value>次回以降パスワード入力をスキップする</value>
  </data>
  <data name="PreviousDiaryButton.Label" xml:space="preserve">
    <value>前の日記へ</value>
  </data>
  <data name="PreviousDiaryButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>ひとつ前の日記へ移動します(Ctrl+P)．</value>
  </data>
  <data name="SaveButton.Label" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="SaveButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>日記を上書き保存します(Ctrl+S)．</value>
  </data>
  <data name="SavedDiary" xml:space="preserve">
    <value>日記を保存しました．</value>
  </data>
  <data name="SavingDiary" xml:space="preserve">
    <value>日記を保存中...</value>
  </data>
  <data name="SettingPivot.Text" xml:space="preserve">
    <value>設定</value>
    <comment>MainPageの第3タブ</comment>
  </data>
  <data name="SkipPasswordToggleSwitch.Header" xml:space="preserve">
    <value>起動時，パスワード入力を省略</value>
  </data>
  <data name="SkipPasswordToggleSwitch.OffContent" xml:space="preserve">
    <value>いいえ</value>
  </data>
  <data name="SkipPasswordToggleSwitch.OnContent" xml:space="preserve">
    <value>はい</value>
  </data>
  <data name="SuitablePassword" xml:space="preserve">
    <value>使用可能なパスワードです．</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Diarix</value>
  </data>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>Diarixへようこそ</value>
    <comment>スタートページに表示する</comment>
  </data>
  <data name="CalendarButton.Label" xml:space="preserve">
    <value>カレンダー</value>
  </data>
  <data name="CalendarExplanation.Text" xml:space="preserve">
    <value>日付を指定して，その日の日記へジャンプ</value>
  </data>
  <data name="ExplorerButton.Label" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="ExplorerExplanation" xml:space="preserve">
    <value>全ての日記から特定の言葉を検索</value>
  </data>
  <data name="HyperLinkAddButton.Label" xml:space="preserve">
    <value>リンク</value>
  </data>
  <data name="MediaAddButton.Label" xml:space="preserve">
    <value>メディア</value>
  </data>
  <data name="ParagraphAddButton.Label" xml:space="preserve">
    <value>段落</value>
  </data>
  <data name="AddedParagraph" xml:space="preserve">
    <value>段落を追加しました．</value>
  </data>
  <data name="HistoryCalendarExplanation.Text" xml:space="preserve">
    <value>指定した日付の日記へジャンプ</value>
  </data>
  <data name="SearchExplanation.Text" xml:space="preserve">
    <value>キーワードに合致する日記を検索</value>
  </data>
</root>